Redis(Remote Dictionary Server)
- 데이터를 디스크가 아닌 메모리(RAM)에 저장해서 매우 빠른 성능을 제공
- key, value 구조로 데이터를 저장
  문자열, 리스트, 해시, set, ... 지원

- 장점
  * 읽기/쓰기 빠르다!
  * 다양한 데이터 구조!

- Redis 사용 사례
  캐싱(Caching)
  세션관리
  실시간 분석 및 통계
  메시지 큐
  지리공간 인덱싱
  속도 제한
  실시간 채팅 및 메이징

# Redis 설치
# Redis 동작을 하는 지 확인
   작업관리자 창으로 들어가기
   redis-server.exe 실행 중!

# Redis 클라이언트 창 열기

# Redis 기본 명령어
데이터(Key, Value) 저장
- set [key] [value]
- 문자열 사이에 공백이 들어가면 value값을 저장할 때 "" 감싼다.
- ':' 키를 구별하는 방식, key 네이밍 규칙

데이터 조회 key로 value 조회
- get [key]
- 데이터가 있으면 value 조회됨, 데이터가 없으면 nil 출력

key 전부 조회
- keys *

데이터 삭제
- del [key]

데이터 저장 시 만료시간(TTL)
- 데이터를 일정 기간이 지나면 삭제, 되도록 보관하는 만료 시간을 설정
- Redis 메모리 공간이 한정 되어있기 때문에 TTL을 활용해서 자주 사용하지 않는
   데이터는 삭제하고 자주 사용하는 데이터만 Redis에 저장하려고 만듬
- set [key이름] [value] ex [만료시간(초)]

만료시간을 확인
- ttl [key]
- 남은시간을 반환하거나 남은 시간이 모두 지나면 -2 반환(존재하지 않는 키)
- key는 존재하지만 TTL은 존재하지 않을 경우 -1

모든 데이터 삭제하기
- flushall


# 도메인 기반 네이밍
- 현업에서 Redis와 같은 데이터베이스에서 주로 사용하는 네이밍 컨벤션은
  키를 체계적으로 관리하고 중복을 방지하기 위해서 사용, 가독성을 높이는데 큰 도움을 준다.
- 가독성, 일관성, 검색 및 필터링 좋다, 확장성

# 캐시(Cache)란?
- 데이터를 원본 저장소보다 빠르게 가져올 수 있는 임시 데이터 저장소

# 캐싱(Caching)이란?
- 캐시에 접근해서 데이터를 빠르게 가져오는 방식