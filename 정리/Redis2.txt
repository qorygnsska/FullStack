Redis 데이터를 캐싱 할 때 사용하는 전략 
  - Cache Aside
 - Write Around

Redis를 캐시로 쓸 때 데이터를 어떻게 캐싱을 하고 캐싱된 데이터를 어떻게 조회해올 건지 내용이다!

#  Cache Aside
 1. 캐시에 데이터가 있는 경우 
    (Cache Hit)
   - 데이터베이스 가서 요청 
        하지 않고 레디스로 가서 
        데이터를 가져온다.
 
 2. 캐시에 데이터가 없을경우
     (Cache Miss)
   1. 레디스한테 데이터 요청
     2.  데이터베이스 한테 요청
     3.  디비에서 응답을 받음 
     4.  캐시 데이터 저장
    why? 
   다음에 해당 데이터를 조회할 
      때 빠르게 조회해서 가져 오기
      위해서!
    
   동작 방식
     게시판  서비스 배포 
    1.처음에는 아무것도 데이터없음
      ( 레디스, 디비)
    2.사용자가 회원가입, 게시글 작성 
       레디스에 저장되는 것이 아니라 디비 저장
    3. 사용자가 데이터를 조회 요청!
      레디스로 먼저 요청이 들어감
      데이터가 없으면 디비로 데이터를 조회하여
      응답 받는다.     
    4. 디비에서 응답받은 데이터를 레디스에
        데이터를 저장한다.
    5. 다시한번 조회 요청이 들어오면 이때!
        레디스를 먼저 가서 요청한다.

  위에 있는 내용은 데이터를 어떻게 조회할 지
  내용이다! 

  Write Around 
   - 데이터를 어떻게 쓸지(저장,수정,삭제)
     - 데이터를 저장할 때 Redis저장 하지 
        않고 데이터베이스만 저장하는 방식

 1.캐시된 데이터와 DB의 데이터 불일치
 2.캐시에 저장할 수 있는 공간 조금 작다! 
   단점을 보완하기 위해서는  데이터의 만료
    시간 (TTL) 설정 

 데이터 조회 성능 개선 
   SQL 튜닝 
   캐싱 서버 활용
   레플리케이션 ,샤딩, DB스케일업
 
엘라스틱 서치
    두개의 버전은 꼭 같이 맞추기!
    JDK 가 꼭 설치 되어있어야된다.
    JVM 위에서 동작하기 때문에 ! 

    - 엘라스틱 서치를 설치!
       윈도우,Mac,우투분(CUI)
    1.압축 파일을 다운받아서 압축 풀기
       2. bin 폴더 들어가서 
            elasticsearch.bat 실행
            만약 실행 안되면 cmd창으로 가서
       C:\fullstack\part6 \Elasticsearch\dev  \elasticsearch-7.17.12\bin 
       이동 후 파일 실행
       elasticsearch.bat
       엘라스틱 서치 설치 폴더는 다를 수 
       있기 때문에 ! 본인 폴더 참조!

    설치 기본적으로 사용하는 포트 번호 
       9200
       웹 브라우저에서 설치 확인 
        
     
    - 키바나 설치 (GUI)
    시각화 (그래프, 데이터 분석)

# 엘라스틱 서치 기본
   - 데이터를 어떻게 저장하고 검색할지 이해
     해야됨!
   - 먼저 스키마를 만들어서 데이터를 저장한다
     이때 데이터를 어떻게 구조화하고 데이터
     타입을 어떻게 설정할 지 알아야된다.

   - 엘라스틱 서치 저장 방식 
     검색 데이터를 중심으로 데이터를 저장방식
     데이터를 어떤 텍스트(키워드)가 어느
     문서 안에 있느냐!의 형태로 저장하고
     빠르게 검색할 수있도록 인덱스를 만든다.

 - JSON 형식의 데이터를 저장한다.
  - 모든 기능은 REST API 형태로 되어있다.
  - GET   - select
     PUT    - Update
     POST   - Inset 
     ELETE - Delete

 - curl 
   CUI를 통해서 다양한 프로토콜을 사용하여
     데이터를 전송하거나 가져오는 명령 도구
     어떤 운영체제든 명령문을 작성 가능하다

   HTTP, HTTPS 웹서버와 통신하거나
     다른 서버와의 데이터 송수신 작업을 할 때
     유용하다. 
 
     -X : 요청시 사용할 메서드 
            POST,GET,PUT,DELETE
     -X GET (윈도우) , -XGET (리눅스계열)

     -d : 데이터를 전송할 때 사용 POST요청 시 사용 가능하다.
     -o : 데이터를 표준 출력에 보여주는 것이 아니라
           파일 형태로 보여준다. 
     
# 엘라스틱 서치(CRUD)
1. 데이터베이스 생성과 같은 index를 생성
   생성을 하기 전에 index가 있는 지 조회!
   GET요청(Read)
   curl -XGET http://localhost:9200/인덱스명
   curl -XGET http://localhost:9200/classes

   명령문을 JSON형태로 보는 키워드
   커맨드 명령어 cls : 화면을 지운다.
   pretty 이쁘게 보여준다.
   curl -XGET http://localhost:9200/classes?pretty

   Index 생성 명령
   curl -XPUT "http://localhost:9200/classes"

   Index 삭제
   curl -XDELETE http://localhost:9200/classes

 # 인덱스(데이터베이스생성)type(테이블 생성)
         그 안에 데이터를 저장! (문서) 타입으로 저장한다.
        POST 보낸다.
        7.X 이후 버전들은
        윈도우 환경에서 cmd(터미널) 이용해서 문서를 저장할 때
        key_doc
        curl -XPOST http://localhost:9200/classes/_doc/1?pretty -d "{\"name\" : \"jaeho\"}"

        7.x버전 이후에 HTTP 통신을 하기위해서 JSON타입
        -H "Content-Type: application/json"

         ****에러코드가 429가 뜰 수 있다.****

        # 위에 추가된 내용을 조회 index 조회
          curl -XGET http://localhost:9200/classes/_doc/1?pretty


# bulk
- 데이터를 한꺼번에 여러개 저장하는 내용!
- 파일의 경로는 기본적으로 
curl -XPOST http://localhost:9200/_bulk?pretty --data-binary "@classes.json" -H "Content-Type: application/json"