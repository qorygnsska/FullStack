IAM (Identity and Access    
     Management)
 -유저를 관리하고 접근 레벨 및    
    권한 대한 관리
  
 - 접근키(access key), 비밀키
    (secret access key)	
 - 매우 세밀한 접근 권한 부여 기능
  - 비밀번호를 수시로 변경하게 끔 함
  - 다중 인증(2차 인증)

AWS의 IAM 구성 요소
 - User
  실제 AWS의 기능을 이용하는 사람
    기존사용자 
     - AWS의 모든 권한을 가짐
   
  개발자 
     -S3에 대해 전체 접근 권한 가짐

    인프라 
    - S3,EC2 대한 읽기 전용 
    각 사용자가 본인 역할엥 맞는 서비
    스만 사용할 수록 보안을 강화
 
 - Group 
   하나의 그룹에 여러명의 사용자를 
     지정해서 공통적으로 권한을 주어야 
     할 때 사용
     하나의 그룹은 최대 10명
     최대 그룹으로 100개 

 - Role(역할)
   특정 작업을 수행할때 일시적으로
     부여되는 권한.
     한 유저가 특정시간 동안만 다른 역
     할을 맡아 추가 권한을 가질 수 있다.

 - Policy(정책)
    사용자, 그룹,역할에 권한을 부여하는
    기본 단위 
    JSON,서비스 선택 작성해 줄 수있다.
    사용자가 AWS서비스에 대해 어떤 
    작업을 수행할 수 있는지 정의(규칙)

 요약 
   그룹 : 비슷한 권한이 필요한 유저들 묶음
   유저 : 개발사용자
   역할 : 일시적인 권한 부여
   정책 : 권한 규칙을 정의

 IAM 은 유니버셜함!
    - 지역 설정이 필요없음!
    - 특정 지역(리전)에 따라 따로 설정할 
      필요가 없다! 한번 설정하면 IAM 
      모든 리전에서 일관적으로 사용할 수있
   음

  IAM규칙 활성화해서 적용!
   -  우측 상단 이름 클릭 -> 계정
   - 결제 정보에 대한 IAM 사용자 및 역할     
      액세스 -> 활성화!

  사용자 생성할 때 
   - 이름은 아무거나 작성
   - 그룹도 그냥 넘기면 됨
   - 나머지는 그냥 다 뒤로 눌루면 됨
   
   사용자 생성 후 Access Key 
  Access Key 
   - AWS계정에 접근하기 위한 인증 정보 
        중 한가지 
   Secret Access Key
   - 추후 
  
    Access Key 생성
    - 동영상 참조!
    - 발급받은 key는 꼭 어딘가 저장하기
    - 비밀엑세스 키는 다시 확인 할 수없음

 Lambad
  - 서버리스(Serverless)컴퓨팅 서비스
       서버를 직접 운영하거나 관리하지 않고
        필요한 순간에만 코드를 실행하는 방식
   -  이벤트 기반으로 실행되는 함수
   - AWS 서버를 자동으로 관리
   - 노드 , 파이썬, java ,go 다양한 언어 지원
   - 람다 함수 
     짧고 간단한 작업을 수행하기 위한 코드

   -  S3에 파일이 올라오면 람다함수가 실행해서
      로그를 찍는 내용!
   - 최대 5분 런타임  시간 허용
     함수는 임시 저장공간만 제공 
   (임시 파일 처리,데이터 캐싱)
     긴 작업이 필요하면 step Function 도구랑
     연결 해야된다.

   - 압축 파일의 크기는 최대 50MB 
  - 너무 큰 파일은 S3에 버킷에 저장 ,업로드 
      후 처리하는 방식!

   - 모니터링 탭 
     람다 함수의 실행 빈도, 실행시간, 오류율 
     데이터를 제공하는 탭 
     람다 함수가 실행한 로그 내용은 확인 불가!

   - X-Ray 트레이스 
     람다 함수가 실행했을 때 실행 경로를 
      시각화 하여 함수가 호출 된 후 성능과 지연
      시간을 분석할 수있다.

   - CloudWatch Logs 탭으로 이용해서 
      실제 람다 함수가 실행한 로그 값을 확인
      할 수 있다.  
     