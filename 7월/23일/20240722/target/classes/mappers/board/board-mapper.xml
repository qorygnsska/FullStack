<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ss.mvc.board.mapper.BoardMapper">
	<!-- resultMap 각각 매칭 시키는 타입! -->
	<resultMap type="Board" id="boardListResultMap">
		<id property="no" column="NO" />
		<result property="title" column="TITLE" />
		<result property="writerId" column="ID" />
		<result property="writerNo" column="WRITER_NO" />
		<result property="readCount" column="READCOUNT" />
		<result property="originalFileName" column="ORIGINAL_FILENAME" />
		<result property="renamedFileName" column="RENAMED_FILENAME" />
		<result property="content" column="CONTENT" />
		<result property="type" column="TYPE" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="modifyDate" column="MODIFY_DATE" />
	</resultMap>

	<resultMap type="Reply" id="boardReplyResultMap">
		<id property="no" column="NO" />
		<result property="boardNo" column="BOARD_NO" />
		<result property="writerNo" column="WRITER_NO" />
		<result property="writerId" column="ID" />
		<result property="content" column="CONTENT" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="modifyDate" column="MODIFY_DATE" />
	</resultMap>


	<!-- resultMap 태그는 Sql쿼리 결과를 특정 객체에 매핑하기 위한 매핑규칙을 정하는 것! extends 다른 resultMap상속한다. 
		collection 태그를 이용해서 클래스 변수에 있는 컬렉션 태그를 매핑 하기 위해서 사용된다. 그때 클래스 변수 명을 입력한다. 
		columnPrefix Board와 Reply 객체의 값을 가져오 면 중복되는 컬럼명이 발생한다. Board와 Reply컬럼명을 구별하기 
		위해서 앞에 접두사 R로 시작하는 컬럼명은 Reply 속성을 사용한다. -->
	<resultMap type="Board" id="boardDetailResultMap"
		extends="boardListResultMap">

		<collection property="replies" javaType="arrayList"
			resultMap="boardReplyResultMap" columnPrefix="R_" />

	</resultMap>




	<!-- 게시글에 작성된 댓글이 조회를 했을 때 댓글도 같이 저장 -->
	<select id="selectBoardList1" resultMap="boardListResultMap"
		parameterType="map">

		select
		B.no ,B.title ,M.id
		,B.CREATE_DATE,
		B.ORIGINAL_FILENAME,
		B.READCOUNT
		from Board B
		join Member M on(B.writer_no = M.no)

		where B.status = 'Y'

		<if test="writer != null">
			AND M.ID LIKE '%${writer}%'
		</if>
		<if test="title != null">
			AND B.TITLE LIKE '%${title}%'
		</if>
		<if test="content != null">
			AND B.CONTENT LIKE '%${content}%'
		</if>



		order by B.no desc limit 10

	</select>



	<select id="selectBoardCount" resultType="int">

		select
		count(*)
		from
		board

	</select>

	<!--   * 조인 했을 때 
	테이블에 동일한 컬럼명이 있을 경우 
	중복되서 mybatis에서 제대로 매핑을 못한다. -->
	<select id="selectBoardByNo" parameterType="int"
		resultMap="boardDetailResultMap">
		select
			B.NO, B.TITLE, M.ID, B.READCOUNT
		  , B.TYPE, B.ORIGINAL_FILENAME
		  , B.RENAMED_FILENAME, B.CONTENT
		  , B.CREATE_DATE, B.MODIFY_DATE,
			R.NO AS R_NO, 
		    R.BOARD_NO AS R_BOARD_NO, 
		    R.CONTENT  AS R_CONTENT, 
		    R.CREATE_DATE  AS R_CREATE_DATE, 
		    R.MODIFY_DATE  AS R_MODIFY_DATE
		from board B
		join Member M on(B.WRITER_NO=M.NO)
		left join 
			reply R on(R.BOARD_NO = B.NO)
		where 
			B.status = 'Y'
		and 
			B.No =#{no}

	</select>
	<!-- 게시글을 기준으로 해서 댓글이 있든없든 댓글이 있으면 가져오고 없으면 안가져온다. -->


	<!--  리플에 관련된 sql  -->
	<insert id="insertReply"
			parameterType="Reply">
		
		INSERT INTO REPLY(
				NO, BOARD_NO, WRITER_NO, 
				CONTENT, STATUS, CREATE_DATE, MODIFY_DATE) 
			VALUES(
				0, #{boardNo}, #{writerNo}, #{content}, 
				DEFAULT, DEFAULT, DEFAULT
			)
	
	</insert>

	<delete id="deleteReply">
		delete from reply
		where NO = #{replyNo}
	</delete>




</mapper>